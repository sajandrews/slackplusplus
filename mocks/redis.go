// Code generated by MockGen. DO NOT EDIT.
// Source: redis.go

// Package redis is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	redis "github.com/go-redis/redis"
	gomock "github.com/golang/mock/gomock"
)

// MockRediser is a mock of Rediser interface
type MockRediser struct {
	ctrl     *gomock.Controller
	recorder *MockRediserMockRecorder
}

// MockRediserMockRecorder is the mock recorder for MockRediser
type MockRediserMockRecorder struct {
	mock *MockRediser
}

// NewMockRediser creates a new mock instance
func NewMockRediser(ctrl *gomock.Controller) *MockRediser {
	mock := &MockRediser{ctrl: ctrl}
	mock.recorder = &MockRediserMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockRediser) EXPECT() *MockRediserMockRecorder {
	return m.recorder
}

// Incr mocks base method
func (m *MockRediser) Incr(key string) *redis.IntCmd {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Incr", key)
	ret0, _ := ret[0].(*redis.IntCmd)
	return ret0
}

// Incr indicates an expected call of Incr
func (mr *MockRediserMockRecorder) Incr(key interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Incr", reflect.TypeOf((*MockRediser)(nil).Incr), key)
}

// Decr mocks base method
func (m *MockRediser) Decr(key string) *redis.IntCmd {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Decr", key)
	ret0, _ := ret[0].(*redis.IntCmd)
	return ret0
}

// Decr indicates an expected call of Decr
func (mr *MockRediserMockRecorder) Decr(key interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Decr", reflect.TypeOf((*MockRediser)(nil).Decr), key)
}

// Get mocks base method
func (m *MockRediser) Get(key string) *redis.StringCmd {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", key)
	ret0, _ := ret[0].(*redis.StringCmd)
	return ret0
}

// Get indicates an expected call of Get
func (mr *MockRediserMockRecorder) Get(key interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockRediser)(nil).Get), key)
}
